{"version":3,"sources":["ApolloClient.js","queries.js","Movie.js","Home.js","Detail.js","Header.js","globalStyles.js","App.js","index.js"],"names":["client","ApolloClient","uri","HOME_PAGE","gql","MOVIE_DETAILS","Card","styled","div","props","background","Title","span","Movie","id","title","rating","poster","to","Container","charPoses","exit","opacity","y","enter","delay","charIndex","Home","useEffect","console","log","query","loading","data","error","className","initialPose","pose","movies","map","item","key","medium_cover_image","Image","withComponent","h1","Paragraph","bold","MovieContainer","Detail","movieId","match","params","variables","parseInt","Fragment","src","movie","description_intro","suggestions","Header","style","height","display","alignItems","padding","backGroundColor","fontSize","fontWeight","textDecoration","GlobalStyle","createGlobalStyle","reset","App","flexDirection","justifyContent","borderBottom","exact","path","component","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27bfbcbf.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  uri: \"https://movieql-nomad.herokuapp.com\"\n});\n\nexport default client;\n","import gql from \"graphql-tag\";\n\nexport const HOME_PAGE = gql`\n  query {\n    movies(rating: 7, limit: 50) {\n      id\n      title\n      genres\n      rating\n      medium_cover_image\n    }\n  }\n`;\n\nexport const MOVIE_DETAILS = gql`\n  query getMovieDetails($movieId: Int!) {\n    movie(id: $movieId) {\n      medium_cover_image\n      title\n      rating\n      description_intro\n      language\n      genres\n    }\n    suggestions(id: $movieId) {\n      id\n      medium_cover_image\n      title\n      rating\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  border-radius: 15px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-image: ${props => `url(${props.background})`};\n  background-size: cover;\n  background-position: center center;\n  height: 300px;\n  width: 200px;\n  margin-bottom: 40px;\n  position: relative;\n`;\n\nconst Title = styled.span`\n  background-color: #2f2f2f;\n  width: auto;\n  padding: 10px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  position: absolute;\n  bottom: 25px;\n  left: 0;\n  right: 0;\n  margin: auto;\n`;\n\nconst Movie = ({ id, title, rating, poster }) => (\n  <Link to={`/details/${id}`}>\n    <Card background={poster}>\n      <Title>\n        {title} / {rating} ⭐️\n      </Title>\n    </Card>\n  </Link>\n);\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  poster: PropTypes.string.isRequired\n};\n\nexport default Movie;\n","import React, { useEffect } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { HOME_PAGE } from \"./queries\";\nimport SplitText from \"react-pose-text\";\nimport styled from \"styled-components\";\nimport Movie from \"./Movie\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1.5rem;\n  flex-wrap: wrap;\n  justify-items: center;\n`;\n\nconst charPoses = {\n  exit: { opacity: 0, y: 20 },\n  enter: {\n    opacity: 1,\n    y: 0,\n    delay: ({ charIndex }) => charIndex * 150\n  }\n};\n\nconst Home = () => {\n  useEffect(() => {\n    console.log(\"Home Mounted!!\");\n  }, []);\n  return (\n    <Container>\n      <Query query={HOME_PAGE}>\n        {/* {({ loading, data, error }) => {\n        if (loading) return <span>loading</span>;\n        if (error) return <span>Something Happened</span>;\n        if (data) {\n          console.log(data);\n          return <span>Yay!!</span>;\n        }\n      }} */}\n        {({ loading, data, error }) => {\n          if (loading)\n            return (\n              <SplitText\n                className=\"loader__text\"\n                initialPose=\"exit\"\n                pose=\"enter\"\n                charPoses={charPoses}\n              >\n                Loading....................\n              </SplitText>\n            );\n          if (error) return \"Something Happened\";\n          return data.movies.map(item => (\n            <Movie\n              id={item.id}\n              key={item.id}\n              poster={item.medium_cover_image}\n              title={item.title}\n              rating={item.rating}\n            />\n          ));\n        }}\n      </Query>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { MOVIE_DETAILS } from \"./queries\";\nimport Movie from \"./Movie\";\nimport styled from \"styled-components\";\nimport SplitText from \"react-pose-text\";\n\nconst charPoses = {\n  exit: { opacity: 0, y: 20 },\n  enter: {\n    opacity: 1,\n    y: 0,\n    delay: ({ charIndex }) => charIndex * 150\n  }\n};\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-gap: 1.5rem;\n  margin-bottom: 50px;\n`;\n\nconst Card = styled.div`\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-color: white;\n  border-radius: 7px;\n`;\n\nconst Image = Card.withComponent(\"img\");\n\nconst Title = styled.h1`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst Paragraph = styled.span`\n  margin-bottom: 10px;\n  display: block;\n  font-weight: ${props => (props.bold ? \"500\" : \"400\")};\n`;\n\nconst MovieContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  grid-gap: 1.5rem;\n  flex-wrap: wrap;\n  justify-items: center;\n  margin-top: 50px;\n`;\n\nconst Detail = ({\n  match: {\n    params: { movieId }\n  }\n}) => {\n  useEffect(() => {\n    console.log(\"Detail redered!\");\n    return () => {\n      console.log(\"Detail unmounted\");\n    };\n  });\n  return (\n    <Query query={MOVIE_DETAILS} variables={{ movieId: parseInt(movieId) }}>\n      {({ loading, error, data }) => {\n        if (loading)\n          return (\n            <SplitText\n              className=\"loader__text\"\n              initialPose=\"exit\"\n              pose=\"enter\"\n              charPoses={charPoses}\n            >\n              Loading....................\n            </SplitText>\n          );\n        if (error) return \"error\";\n        return (\n          <React.Fragment>\n            <Container>\n              <Image src={data.movie.medium_cover_image} />\n              <span>\n                <Title>{data.movie.title}</Title>\n                <Paragraph bold>Rating: {data.movie.rating}</Paragraph>\n                <Paragraph>{data.movie.description_intro}</Paragraph>\n              </span>\n            </Container>\n            <Title>Suggested</Title>\n            <MovieContainer>\n              {data.suggestions.map(movie => (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.title}\n                  rating={movie.rating}\n                  poster={movie.medium_cover_image}\n                />\n              ))}\n            </MovieContainer>\n          </React.Fragment>\n        );\n      }}\n    </Query>\n  );\n};\nexport default Detail;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  const style = {\n    height: \"50px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0px\",\n    backGroundColor: \"#2f2f2f\",\n    fontSize: \"25px\",\n    fontWeight: \"500\",\n    textDecoration: \"none\"\n  };\n\n  return (\n    <Link to={\"/\"} style={style}>\n      <span>DK's Movie App</span>\n    </Link>\n  );\n};\n\nexport default Header;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nexport const GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Indie+Flower&display=swap');\n  ${reset};\n  body{\n    font-family: 'Indie Flower', cursive;\n    background-color: #2f2f2f;\n    color: white;\n  }\n  a{\n      color:inherit;\n  }\n  main {\n    margin: 0 auto;\n    padding: 20px;\n  }\n`;\n","import React, { Component } from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport client from \"./ApolloClient\";\nimport Home from \"./Home\";\nimport Detail from \"./Detail\";\nimport Header from \"./Header\";\nimport { GlobalStyle } from \"./globalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <GlobalStyle />\n        <ApolloProvider client={client}>\n          <Router>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                borderBottom: \"1px solid grey\"\n              }}\n            >\n              <Header></Header>\n            </div>\n            <main>\n              <Route exact={true} path={\"/\"} component={Home} />\n              <Route path={\"/details/:movieId\"} component={Detail} />\n            </main>\n          </Router>\n        </ApolloProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}