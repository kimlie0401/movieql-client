{"version":3,"sources":["ApolloClient.js","queries.js","Movie.js","Home.js","Detail.js","globalStyles.js","App.js","index.js"],"names":["client","ApolloClient","uri","HOME_PAGE","gql","MOVIE_DETAILS","Card","styled","div","props","background","Title","span","Movie","id","title","rating","poster","to","Container","charPoses","exit","opacity","y","enter","delay","charIndex","Home","query","loading","data","error","className","initialPose","pose","movies","map","item","key","medium_cover_image","Image","withComponent","h1","Paragraph","bold","MovieContainer","Detail","movieId","match","params","variables","parseInt","Fragment","src","movie","description_intro","suggestions","GlobalStyle","createGlobalStyle","reset","App","exact","path","component","Component","ReactDOM","render","document","getElementById"],"mappings":"0QAMeA,EAJA,I,MAAIC,GAAa,CAC9BC,IAAK,wC,4lBCDA,IAAMC,EAAYC,IAAH,KAYTC,EAAgBD,IAAH,K,kpBCT1B,IAAME,EAAOC,UAAOC,IAAV,KAGY,SAAAC,GAAK,oBAAWA,EAAMC,WAAjB,QASrBC,EAAQJ,UAAOK,KAAV,KA6BIC,EAjBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,OAAtB,OACZ,kBAAC,IAAD,CAAMC,GAAE,mBAAcJ,IACpB,kBAACR,EAAD,CAAMI,WAAYO,GAChB,kBAACN,EAAD,KACGI,EADH,MACaC,EADb,mB,mLCzBN,IAAMG,EAAYZ,UAAOC,IAAV,KAOTY,EAAY,CAChBC,KAAM,CAAEC,QAAS,EAAGC,EAAG,IACvBC,MAAO,CACLF,QAAS,EACTC,EAAG,EACHE,MAAO,mBAA+B,IAA/B,EAAGC,aA4CCC,EAxCF,WACX,OACE,kBAACR,EAAD,KACE,kBAAC,IAAD,CAAOS,MAAOzB,IASX,YAA+B,IAA5B0B,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACjB,OAAIF,EAEA,kBAAC,IAAD,CACEG,UAAU,eACVC,YAAY,OACZC,KAAK,QACLd,UAAWA,GAJb,qBASAW,EAAc,qBACXD,EAAKK,OAAOC,KAAI,SAAAC,GAAI,OACzB,kBAAC,EAAD,CACEvB,GAAIuB,EAAKvB,GACTwB,IAAKD,EAAKvB,GACVG,OAAQoB,EAAKE,mBACbxB,MAAOsB,EAAKtB,MACZC,OAAQqB,EAAKrB,iB,+xBChD3B,IAAMG,EAAYZ,UAAOC,IAAV,KAYTgC,EANOjC,UAAOC,IAAV,KAMSiC,cAAc,OAE3B9B,EAAQJ,UAAOmC,GAAV,KAKLC,EAAYpC,UAAOK,KAAV,KAGE,SAAAH,GAAK,OAAKA,EAAMmC,KAAO,MAAQ,SAG1CC,EAAiBtC,UAAOC,IAAV,KA6CLsC,EArCA,SAAC,GAAD,IAEDC,EAFC,EACbC,MACEC,OAAUF,QAFC,OAKb,kBAAC,IAAD,CAAOnB,MAAOvB,EAAe6C,UAAW,CAAEH,QAASI,SAASJ,MACzD,YAA+B,IAA5BlB,EAA2B,EAA3BA,QAASE,EAAkB,EAAlBA,MAAOD,EAAW,EAAXA,KAClB,OAAID,EAAgB,UAChBE,EAAc,QAEhB,kBAAC,IAAMqB,SAAP,KACE,kBAAC,EAAD,KACE,kBAACZ,EAAD,CAAOa,IAAKvB,EAAKwB,MAAMf,qBACvB,8BACE,kBAAC,EAAD,KAAQT,EAAKwB,MAAMvC,OACnB,kBAAC4B,EAAD,CAAWC,MAAI,GAAf,WAAyBd,EAAKwB,MAAMtC,QACpC,kBAAC2B,EAAD,KAAYb,EAAKwB,MAAMC,qBAG3B,kBAAC,EAAD,kBACA,kBAACV,EAAD,KACGf,EAAK0B,YAAYpB,KAAI,SAAAkB,GAAK,OACzB,kBAAC,EAAD,CACEhB,IAAKgB,EAAMxC,GACXA,GAAIwC,EAAMxC,GACVC,MAAOuC,EAAMvC,MACbC,OAAQsC,EAAMtC,OACdC,OAAQqC,EAAMf,8B,8WChEvB,IAAMkB,EAAcC,4BAAH,IAEpBC,KCoBWC,E,iLAdX,OACE,kBAAC,IAAD,CAAgB5D,OAAQA,GACtB,kBAACyD,EAAD,MACA,kBAAC,IAAD,KACE,8BACE,kBAAC,IAAD,CAAOI,OAAO,EAAMC,KAAM,IAAKC,UAAWpC,IAC1C,kBAAC,IAAD,CAAOmC,KAAM,oBAAqBC,UAAWjB,W,GARvCkB,aCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f727ca6b.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  uri: \"https://movieql-nomad.herokuapp.com\"\n});\n\nexport default client;\n","import gql from \"graphql-tag\";\n\nexport const HOME_PAGE = gql`\n  query {\n    movies(rating: 7, limit: 50) {\n      id\n      title\n      genres\n      rating\n      medium_cover_image\n    }\n  }\n`;\n\nexport const MOVIE_DETAILS = gql`\n  query getMovieDetails($movieId: Int!) {\n    movie(id: $movieId) {\n      medium_cover_image\n      title\n      rating\n      description_intro\n      language\n      genres\n    }\n    suggestions(id: $movieId) {\n      id\n      medium_cover_image\n      title\n      rating\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  border-radius: 15px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-image: ${props => `url(${props.background})`};\n  background-size: cover;\n  background-position: center center;\n  height: 300px;\n  width: 200px;\n  margin-bottom: 40px;\n  position: relative;\n`;\n\nconst Title = styled.span`\n  background-color: white;\n  width: auto;\n  padding: 10px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  position: absolute;\n  bottom: 25px;\n  left: 0;\n  right: 0;\n  margin: auto;\n`;\n\nconst Movie = ({ id, title, rating, poster }) => (\n  <Link to={`/details/${id}`}>\n    <Card background={poster}>\n      <Title>\n        {title} / {rating}⭐️\n      </Title>\n    </Card>\n  </Link>\n);\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  poster: PropTypes.string.isRequired\n};\n\nexport default Movie;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { HOME_PAGE } from \"./queries\";\nimport SplitText from \"react-pose-text\";\nimport styled from \"styled-components\";\nimport Movie from \"./Movie\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  flex-wrap: wrap;\n  justify-items: center;\n`;\n\nconst charPoses = {\n  exit: { opacity: 0, y: 20 },\n  enter: {\n    opacity: 1,\n    y: 0,\n    delay: ({ charIndex }) => charIndex * 150\n  }\n};\n\nconst Home = () => {\n  return (\n    <Container>\n      <Query query={HOME_PAGE}>\n        {/* {({ loading, data, error }) => {\n        if (loading) return <span>loading</span>;\n        if (error) return <span>Something Happened</span>;\n        if (data) {\n          console.log(data);\n          return <span>Yay!!</span>;\n        }\n      }} */}\n        {({ loading, data, error }) => {\n          if (loading)\n            return (\n              <SplitText\n                className=\"loader__text\"\n                initialPose=\"exit\"\n                pose=\"enter\"\n                charPoses={charPoses}\n              >\n                Loading..........\n              </SplitText>\n            );\n          if (error) return \"Something Happened\";\n          return data.movies.map(item => (\n            <Movie\n              id={item.id}\n              key={item.id}\n              poster={item.medium_cover_image}\n              title={item.title}\n              rating={item.rating}\n            />\n          ));\n        }}\n      </Query>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { MOVIE_DETAILS } from \"./queries\";\nimport Movie from \"./Movie\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  margin-bottom: 50px;\n`;\n\nconst Card = styled.div`\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-color: white;\n  border-radius: 7px;\n`;\n\nconst Image = Card.withComponent(\"img\");\n\nconst Title = styled.h1`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst Paragraph = styled.span`\n  margin-bottom: 10px;\n  display: block;\n  font-weight: ${props => (props.bold ? \"500\" : \"400\")};\n`;\n\nconst MovieContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  flex-wrap: wrap;\n  justify-items: center;\n  margin-top: 50px;\n`;\n\nconst Detail = ({\n  match: {\n    params: { movieId }\n  }\n}) => (\n  <Query query={MOVIE_DETAILS} variables={{ movieId: parseInt(movieId) }}>\n    {({ loading, error, data }) => {\n      if (loading) return \"loading\";\n      if (error) return \"error\";\n      return (\n        <React.Fragment>\n          <Container>\n            <Image src={data.movie.medium_cover_image} />\n            <span>\n              <Title>{data.movie.title}</Title>\n              <Paragraph bold>Rating: {data.movie.rating}</Paragraph>\n              <Paragraph>{data.movie.description_intro}</Paragraph>\n            </span>\n          </Container>\n          <Title>Suggested</Title>\n          <MovieContainer>\n            {data.suggestions.map(movie => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                rating={movie.rating}\n                poster={movie.medium_cover_image}\n              />\n            ))}\n          </MovieContainer>\n        </React.Fragment>\n      );\n    }}\n  </Query>\n);\n\nexport default Detail;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nexport const GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Maven+Pro:400,500');\n  ${reset};\n  body{\n    font-family: 'Maven Pro', sans-serif;\n    background-color: #ecf0f1;\n  }\n  a{\n      color:inherit;\n  }\n  main {\n    width: 80%;\n    margin: 0 auto;\n    padding: 20px;\n  }\n`;\n","import React, { Component } from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport client from \"./ApolloClient\";\nimport Home from \"./Home\";\nimport Detail from \"./Detail\";\nimport { GlobalStyle } from \"./globalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <GlobalStyle />\n        <Router>\n          <main>\n            <Route exact={true} path={\"/\"} component={Home} />\n            <Route path={\"/details/:movieId\"} component={Detail} />\n          </main>\n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}