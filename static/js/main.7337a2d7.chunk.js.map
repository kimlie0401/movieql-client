{"version":3,"sources":["ApolloClient.js","queries.js","Movie.js","Home.js","Detail.js","Header.js","globalStyles.js","App.js","index.js"],"names":["client","ApolloClient","uri","HOME_PAGE","gql","MOVIE_DETAILS","Card","styled","div","props","background","Title","span","Movie","id","title","rating","poster","to","Container","Home","useEffect","console","log","query","loading","data","error","version","xmlns","xlink","x","y","width","height","viewBox","enableBackground","space","style","fill","opacity","d","attributeType","attributeName","type","from","dur","repeatCount","movies","map","item","key","medium_cover_image","Image","withComponent","h1","Paragraph","bold","MovieContainer","Detail","movieId","match","params","variables","parseInt","display","justifyContent","Fragment","src","movie","description_intro","suggestions","Header","alignItems","padding","backGroundColor","fontSize","fontWeight","textDecoration","GlobalStyle","createGlobalStyle","reset","App","flexDirection","borderBottom","exact","path","component","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7337a2d7.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  uri: \"https://movieql-nomad.herokuapp.com\"\n});\n\nexport default client;\n","import gql from \"graphql-tag\";\n\nexport const HOME_PAGE = gql`\n  query {\n    movies(rating: 7, limit: 50) {\n      id\n      title\n      genres\n      rating\n      medium_cover_image\n    }\n  }\n`;\n\nexport const MOVIE_DETAILS = gql`\n  query getMovieDetails($movieId: Int!) {\n    movie(id: $movieId) {\n      medium_cover_image\n      title\n      rating\n      description_intro\n      language\n      genres\n    }\n    suggestions(id: $movieId) {\n      id\n      medium_cover_image\n      title\n      rating\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  border-radius: 15px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-image: ${props => `url(${props.background})`};\n  background-size: cover;\n  background-position: center center;\n  height: 300px;\n  width: 200px;\n  margin: 1rem;\n  position: relative;\n`;\n\nconst Title = styled.span`\n  background-color: #2f2f2f;\n  width: auto;\n  padding: 10px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  position: absolute;\n  bottom: 25px;\n  left: 0;\n  right: 0;\n  margin: auto;\n`;\n\nconst Movie = ({ id, title, rating, poster }) => (\n  <Link to={`/details/${id}`}>\n    <Card background={poster}>\n      <Title>\n        {title} / {rating} ⭐️\n      </Title>\n    </Card>\n  </Link>\n);\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  poster: PropTypes.string.isRequired\n};\n\nexport default Movie;\n","import React, { useEffect } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { HOME_PAGE } from \"./queries\";\nimport styled from \"styled-components\";\nimport Movie from \"./Movie\";\n\nconst Container = styled.div`\n  // display: grid;\n  // grid-template-columns: repeat(3, 1fr);\n  // grid-gap: 1.5rem;\n  // flex-wrap: wrap;\n  // justify-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Home = () => {\n  useEffect(() => {\n    console.log(\"Home Mounted!!\");\n  }, []);\n  return (\n    <Container>\n      <Query query={HOME_PAGE}>\n        {/* {({ loading, data, error }) => {\n        if (loading) return <span>loading</span>;\n        if (error) return <span>Something Happened</span>;\n        if (data) {\n          console.log(data);\n          return <span>Yay!!</span>;\n        }\n      }} */}\n        {({ loading, data, error }) => {\n          if (loading)\n            return (\n              <svg\n                version=\"1.1\"\n                id=\"loader-1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xlink=\"http://www.w3.org/1999/xlink\"\n                x=\"0px\"\n                y=\"0px\"\n                width=\"40px\"\n                height=\"40px\"\n                viewBox=\"0 0 40 40\"\n                enableBackground=\"new 0 0 40 40\"\n                space=\"preserve\"\n              >\n                <path\n                  style={{ fill: \"white\" }}\n                  opacity=\"0.2\"\n                  fill=\"#000\"\n                  d=\"M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946\n    s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634\n    c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z\"\n                />\n                <path\n                  style={{ fill: \"white\" }}\n                  fill=\"#000\"\n                  d=\"M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0\n    C22.32,8.481,24.301,9.057,26.013,10.047z\"\n                >\n                  <animateTransform\n                    attributeType=\"xml\"\n                    attributeName=\"transform\"\n                    type=\"rotate\"\n                    from=\"0 20 20\"\n                    to=\"360 20 20\"\n                    dur=\"0.5s\"\n                    repeatCount=\"indefinite\"\n                  />\n                </path>\n              </svg>\n            );\n          if (error) return \"Something Happened\";\n          return data.movies.map(item => (\n            <Movie\n              id={item.id}\n              key={item.id}\n              poster={item.medium_cover_image}\n              title={item.title}\n              rating={item.rating}\n            />\n          ));\n        }}\n      </Query>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { MOVIE_DETAILS } from \"./queries\";\nimport Movie from \"./Movie\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-gap: 1.5rem;\n  margin-bottom: 50px;\n`;\n\nconst Card = styled.div`\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-color: white;\n  border-radius: 7px;\n`;\n\nconst Image = Card.withComponent(\"img\");\n\nconst Title = styled.h1`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst Paragraph = styled.span`\n  margin-bottom: 10px;\n  display: block;\n  font-weight: ${props => (props.bold ? \"500\" : \"400\")};\n`;\n\nconst MovieContainer = styled.div`\n  // display: grid;\n  // grid-template-columns: repeat(3, 0.7fr);\n  // grid-gap: 1.5rem;\n  // flex-wrap: wrap;\n  // justify-items: center;\n  margin-top: 50px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Detail = ({\n  match: {\n    params: { movieId }\n  }\n}) => {\n  useEffect(() => {\n    console.log(\"Detail redered!\");\n    return () => {\n      console.log(\"Detail unmounted\");\n    };\n  });\n  return (\n    <Query query={MOVIE_DETAILS} variables={{ movieId: parseInt(movieId) }}>\n      {({ loading, error, data }) => {\n        if (loading)\n          return (\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <svg\n                version=\"1.1\"\n                id=\"loader-1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xlink=\"http://www.w3.org/1999/xlink\"\n                x=\"0px\"\n                y=\"0px\"\n                width=\"40px\"\n                height=\"40px\"\n                viewBox=\"0 0 40 40\"\n                enableBackground=\"new 0 0 40 40\"\n                space=\"preserve\"\n              >\n                <path\n                  style={{ fill: \"white\" }}\n                  opacity=\"0.2\"\n                  fill=\"#000\"\n                  d=\"M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946\n    s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634\n    c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z\"\n                />\n                <path\n                  style={{ fill: \"white\" }}\n                  fill=\"#000\"\n                  d=\"M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0\n    C22.32,8.481,24.301,9.057,26.013,10.047z\"\n                >\n                  <animateTransform\n                    attributeType=\"xml\"\n                    attributeName=\"transform\"\n                    type=\"rotate\"\n                    from=\"0 20 20\"\n                    to=\"360 20 20\"\n                    dur=\"0.5s\"\n                    repeatCount=\"indefinite\"\n                  />\n                </path>\n              </svg>\n            </div>\n          );\n        if (error) return \"error\";\n        return (\n          <React.Fragment>\n            <Container>\n              <Image src={data.movie.medium_cover_image} />\n              <span>\n                <Title>{data.movie.title}</Title>\n                <Paragraph bold>Rating: {data.movie.rating}</Paragraph>\n                <Paragraph>{data.movie.description_intro}</Paragraph>\n              </span>\n            </Container>\n            <Title>Suggested</Title>\n            <MovieContainer>\n              {data.suggestions.map(movie => (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.title}\n                  rating={movie.rating}\n                  poster={movie.medium_cover_image}\n                />\n              ))}\n            </MovieContainer>\n          </React.Fragment>\n        );\n      }}\n    </Query>\n  );\n};\nexport default Detail;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  const style = {\n    height: \"50px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0px\",\n    backGroundColor: \"#2f2f2f\",\n    fontSize: \"25px\",\n    fontWeight: \"500\",\n    textDecoration: \"none\"\n  };\n\n  return (\n    <Link to={\"/\"} style={style}>\n      <span>DK's Movie App</span>\n    </Link>\n  );\n};\n\nexport default Header;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nexport const GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Indie+Flower&display=swap');\n  ${reset};\n  body{\n    font-family: 'Indie Flower', cursive;\n    background-color: #2f2f2f;\n    color: white;\n  }\n  a{\n      color:inherit;\n  }\n  main {\n    margin: 0 auto;\n    padding: 20px;\n  }\n`;\n","import React, { Component } from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport client from \"./ApolloClient\";\nimport Home from \"./Home\";\nimport Detail from \"./Detail\";\nimport Header from \"./Header\";\nimport { GlobalStyle } from \"./globalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <GlobalStyle />\n        <ApolloProvider client={client}>\n          <Router>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                borderBottom: \"1px solid grey\"\n              }}\n            >\n              <Header></Header>\n            </div>\n            <main>\n              <Route exact={true} path={\"/\"} component={Home} />\n              <Route path={\"/details/:movieId\"} component={Detail} />\n            </main>\n          </Router>\n        </ApolloProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}